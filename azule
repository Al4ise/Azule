#!/bin/zsh

# VARIABLES
dylibnames=()

# MAKE .TMP
dir=$AZULE/Work
mkdir -p "$dir"/DEBS
mkdir -p "$dir"/JSONS

# DECLARE $TWEAKNAME
echo "Project Name:"
read tweakname

if [ -z "$tweakname" ]
then
tweakname="package"
fi

# MAKE .TMP/$TWEAKNAME
mkdir -p "$dir"/"$tweakname"/Tweak
cd "$dir"/"$tweakname"

# GET IPA
echo "IPA Directory:"
read ipadir

# PREPARE IPA
unzip -q "$ipadir" -d "$dir"/"$tweakname"

# SET OUTPUT DIRECTORY
# echo "Output Directory:"
# read outdir

# GET FILES
echo "Files (BundleID's and files of type .deb .bundle .dylib) (required):"
tweakids=()
vared tweakids

for i in "${tweakids[@]}"
do

case "$i" in
*.deb)
rsync -a "$i" "$dir"/DEBS
dpkg -x "$dir"/DEBS/$(basename "$i") "$dir"/"$tweakname"/Tweak
;;

*.dylib)
rsync -a "$i" "$dir"/"$tweakname"/Tweak
dylibnames+=( $(basename "$i") )

;;
*.bundle)
rsync -a "$i" "$dir"/"$tweakname"/Tweak

;;

*)
# CHECK IF ITS ON PARCILITY
curl -s https://api.parcility.co/db/package/"$i" | jq -r '.status'
if [ "$(curl -s https://api.parcility.co/db/package/"$i" | jq -r '.status')" = "true" ]
then
# GET TWEAK DEBS FROM PARCILITY
curl -s -o "$dir"/JSONS/"$i".json https://api.parcility.co/db/package/"$i"

curl -s -o "$dir/DEBS/$i.deb" "$(jq -r '.data.repo.url' "$dir"/JSONS/"$i".json)$(jq -r '.data.builds[].Filename' "$dir"/JSONS/"$i".json)"
dpkg -x "$dir"/DEBS/"$i".deb "$dir"/"$tweakname"/Tweak
else
echo ""$i" isn't Available on Parcility"
fi

;;
esac
done

# PREPARE BUNDLES
find -E "$dir"/"$tweakname"/Tweak -iname '*.bundle' ! -iregex '.*\.(bundle)/.+' -exec rsync -a {} Payload/*.app \;

echo "DYLIBs to Inject (required):"
vared dylibnames

# INJECT DYLIBS
executable=("$dir"/"$tweakname"/Payload/*.app/$(/usr/libexec/PlistBuddy -c "Print :CFBundleExecutable" Payload/*.app/Info.plist))

for i in "${dylibnames[@]}"
do
find -E "$dir"/"$tweakname"/Tweak -iname "$i" ! -iregex '.*\.(app)/.+' -exec rsync -a {} Payload/*.app/Frameworks \;
$AZULE/insert_dylib --inplace --all-yes "@rpath/$i" "$executable"
done

# IMPORT FRAMEWORKS
chain+=( $dylibnames )
frameworks=( $(find -E "$dir"/"$tweakname"/Tweak -iname '*.framework') $AZULE/CydiaSubstrate.framework )

for i in "${frameworks[@]}"
do
rsync -a "$i" Payload/*.app/Frameworks
frxd="$(basename "$i")/"$(/usr/libexec/PlistBuddy -c "Print :CFBundleExecutable" "$i"/Info.plist)""
chain+=( $frxd )
done

for i in "${chain[@]}"
do
codesign --remove-signature Payload/*.app/Frameworks/"$i"
links=( $(otool -L Payload/*.app/Frameworks/"$i" | cut -d ' ' -f1) )
for u in "${links[@]}"
do

for x in "${chain[@]}"
do
if [[ "$u" =~ "$x" ]]
then
install_name_tool -change "$u" @rpath/"$x" Payload/*.app/Frameworks/"$i"
fi

done
done
done

# PATCH INFO.PLIST
plutil -remove UISupportedDevices "$dir"/"$tweakname"/Payload/*.app/Info.plist

# GENERATE IPA
mkdir -p $AZULE/Packages
zip -r -q -X $AZULE/Packages/$tweakname.ipa Payload

# CLEANUP
rm -rf "$dir"
