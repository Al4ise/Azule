#!/bin/zsh

mkdir -p ~/azule/.tmp
cd $AZULE
git pull
chmod +x insert_dylib
chmod +x azule
chmod +x Install
chmod +x Uninstall

# UPDATE-AZULE GLOBAL COMMAND
if [ ! -f /usr/local/bin/update-azule ]
then
ln -s $AZULE/install /usr/local/bin/update-azule
fi

# AZULE GLOBAL COMMAND
if [ ! -f /usr/local/bin/azule ]
then
ln -s $AZULE/azule /usr/local/bin/azule
fi

# CHECK IF ALL DEPENDENCIES EXIST
checkScriptDependencies () { # "${dependencies[@]}"
    local _packages=( "$@" )
    local _package=
    for _package in ${_packages[@]}; do
        hash $_package
        if (( $? > 0 )); then
            brew install $_package
        fi
    done
}

dependencies=('jq' 'dpkg')
checkScriptDependencies "${dependencies[@]}"

# REMOVE OLD SUBSTRATE
if [ -d CydiaSubstrate.framework ]
then
rm -rf CydiaSubstrate.framework
fi

# INSTALL SUBSTRATE
cd .tmp
curl -s -Lo substrate.deb "$(curl -s 'https://api.parcility.co/db/package/mobilesubstrate/saurik' | jq -r '.data.repo.url + .data.builds[-1].Filename')"
ar -x substrate.deb data.tar.lzma
tar -C $AZULE --lzma --strip-components 3 -xf data.tar.lzma ./Library/Frameworks/CydiaSubstrate.framework
plutil -convert binary1 "$AZULE/CydiaSubstrate.framework/Info.plist" || true
rm -rf "$AZULE/CydiaSubstrate.framework/Libraries" "$AZULE/CydiaSubstrate.framework/Commands"

# CLEANUP
rm -rf $AZULE/.tmp

# CHECK IF XCODE CLI UTILS ARE INSTALLED
xcodecli=$(xcode-select -p 1>/dev/null;echo $?)
if [ $tmpvar = 2 ]
then
xcode-select --install
fi
