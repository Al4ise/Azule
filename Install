#!/bin/zsh

# CHECK IF XCODE CLI UTILS EXIST
xcode-select -p 1>/dev/null
if [ $? != 0 ]; then
    xcode-select --install
fi

# CHECK IF BREW EXISTS
which -s brew >> /dev/null
if [[ $? != 0 ]] ; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

# CHECK IF ADDITIONAL REQUIREMENTS EXIST
dependencies=('jq')
for i in "${dependencies[@]}"; do
    which -s "$i" >> /dev/null
    if [[ $? != 0 ]] ; then
    brew install "$i"
    fi
done

mkdir -p $AZULE
cd $AZULE

while getopts ":fh" args; do
    case "$args" in
        f) git reset --hard HEAD >> /dev/null ;;
        
        h)
            echo "Usage: update-azule [options]"
            echo
            echo "Running the command without any arguments will update Azule normally. If"
            echo "you have made changes to any of Azule's files, the update will be cancelled."
            echo
            echo "Options:"
            echo "  -f     Forcefully update Azule, causing all local changes to be lost."
            echo "  -h     Print this help menu."
            exit 1
            ;;
            
        *)
        
            echo 'Invalid argument. Run "update-azule -h" to print the help menu.'
            exit 1
            ;;
    esac
done

git pull -q

chmod +x azule
chmod +x Install
chmod +x Uninstall
chmod +x insert_dylib

# UPDATE-AZULE GLOBAL COMMAND
if [ ! -f /usr/local/bin/update-azule ]; then
    ln -s $AZULE/Install /usr/local/bin/update-azule
fi

# AZULE GLOBAL COMMAND
if [ ! -f /usr/local/bin/azule ]; then
    ln -s $AZULE/azule /usr/local/bin/azule
fi

# CLEANUP
rm -rf $AZULE/.tmp
